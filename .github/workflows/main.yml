name: Test and package

on:
  push:
    branches: [ github-actions ]
  pull_request:
    branches: [ github-actions ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: testpass
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - 
        name: Checkout code
        uses: actions/checkout@v2
      - 
        name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip pip-tools
          if [ -f requirements.txt ] && [ -f dev-requirements.txt ]; then pip-sync requirements.txt dev-requirements.txt; fi
      - 
        name: Lint with flake8
        run: |
          venv/bin/flake8 colournaming
      - 
        name: Initialise database
        run: venv/bin/flask initdb
        env:
          FLASK_ENV: development
          COLOURNAMING_CFG: ${{ github.workspace }}/docker.cfg
      - 
        name: Test with pytest
        run: venv/bin/flask test
        env:
          FLASK_ENV: development
          COLOURNAMING_CFG: ${{ github.workspace }}/docker.cfg
      - 
        name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - 
        name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      -  
        name: Build docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/colournamer:develop
