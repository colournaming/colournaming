name: Test and package

on:
  push:
    branches: [ github-actions ]
  pull_request:
    branches: [ github-actions ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    container: python:3.6-slim

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: testpass
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel flake8 pytest pip-tools
          if [ -f requirements.txt ] && [ -f dev-requirements.txt ]; then pip-sync requirements.txt dev-requirements.txt; fi
      - name: Lint with flake8
        run: |
          flake8 colournaming
      - name: Initialise database
        run: flask initdb
        env:
          FLASK_ENV: development
          COLOURNAMING_CFG: ${{ github.workspace }}/docker.cfg
      - name: Test with pytest
        run: flask test
        env:
          FLASK_ENV: development
          COLOURNAMING_CFG: ${{ github.workspace }}/docker.cfg
