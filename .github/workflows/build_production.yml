name: Test and build production image

on:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: testpass
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - 
        name: Checkout code
        uses: actions/checkout@v3
      - 
        name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      - 
        name: Install dependencies
        run: |
          python -m pip install --upgrade pip pip-tools
          if [ -f requirements.txt ] && [ -f dev-requirements.txt ]; then pip-sync requirements.txt dev-requirements.txt; fi
      - 
        name: Lint with flake8
        run: |
          flake8 colournaming
      - 
        name: Initialise database
        run: flask initdb
        env:
          FLASK_DEBUG: '1'
          COLOURNAMING_CFG: ${{ github.workspace }}/github.cfg
      - 
        name: Test with pytest
        run: flask test
        env:
          FLASK_DEBUG: '1'
          COLOURNAMING_CFG: ${{ github.workspace }}/github.cfg
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - 
        name: Checkout code
        uses: actions/checkout@v3
      - 
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - 
        name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      -  
        name: Build docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/colournamer:latest
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      -
        name: Configure SSH
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_KEY }}" | base64 -d > ~/.ssh/id_rsa
          echo "${{ secrets.SSH_HOST_ID }}" > ~/.ssh/known_hosts
          md5sum ~/.ssh/id_rsa
          cat ~/.ssh/known_hosts
      - name: Trigger deployment
        run: ssh circleci@magenta.colornaming.net deploy.sh
